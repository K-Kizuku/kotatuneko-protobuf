// @generated by protoc-gen-es v1.10.0
// @generated from file game/rpc/game.proto (package game.rpc, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { GameState, Hand, Object$, Player, Stat } from "../resources/game_pb.js";

/**
 * @generated from message game.rpc.GameStatusResponse
 */
export declare class GameStatusResponse extends Message<GameStatusResponse> {
  /**
   * @generated from field: string sender_id = 1;
   */
  senderId: string;

  /**
   * @generated from field: string room_id = 2;
   */
  roomId: string;

  /**
   * @generated from field: game.resources.GameState state = 3;
   */
  state: GameState;

  /**
   * @generated from field: repeated game.resources.Player players = 4;
   */
  players: Player[];

  /**
   * @generated from field: repeated game.resources.Object objects = 5;
   */
  objects: Object$[];

  /**
   * @generated from field: repeated game.resources.Stat stats = 6;
   */
  stats: Stat[];

  /**
   * @generated from field: repeated game.resources.Hand hands = 7;
   */
  hands: Hand[];

  constructor(data?: PartialMessage<GameStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "game.rpc.GameStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GameStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GameStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GameStatusResponse;

  static equals(a: GameStatusResponse | PlainMessage<GameStatusResponse> | undefined, b: GameStatusResponse | PlainMessage<GameStatusResponse> | undefined): boolean;
}

/**
 * @generated from message game.rpc.GameStatusRequest
 */
export declare class GameStatusRequest extends Message<GameStatusRequest> {
  /**
   * @generated from field: string sender_id = 1;
   */
  senderId: string;

  /**
   * @generated from field: string room_id = 2;
   */
  roomId: string;

  /**
   * @generated from field: game.resources.GameState state = 3;
   */
  state: GameState;

  /**
   * @generated from field: repeated game.resources.Player players = 4;
   */
  players: Player[];

  /**
   * @generated from field: repeated game.resources.Object objects = 5;
   */
  objects: Object$[];

  /**
   * @generated from field: repeated game.resources.Stat stats = 6;
   */
  stats: Stat[];

  /**
   * @generated from field: repeated game.resources.Hand hands = 7;
   */
  hands: Hand[];

  constructor(data?: PartialMessage<GameStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "game.rpc.GameStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GameStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GameStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GameStatusRequest;

  static equals(a: GameStatusRequest | PlainMessage<GameStatusRequest> | undefined, b: GameStatusRequest | PlainMessage<GameStatusRequest> | undefined): boolean;
}

/**
 * @generated from message game.rpc.PhysicsInitRequest
 */
export declare class PhysicsInitRequest extends Message<PhysicsInitRequest> {
  /**
   * @generated from field: string sender_id = 1;
   */
  senderId: string;

  /**
   * @generated from field: string room_id = 2;
   */
  roomId: string;

  /**
   * @generated from field: repeated game.resources.Object objects = 3;
   */
  objects: Object$[];

  constructor(data?: PartialMessage<PhysicsInitRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "game.rpc.PhysicsInitRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PhysicsInitRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PhysicsInitRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PhysicsInitRequest;

  static equals(a: PhysicsInitRequest | PlainMessage<PhysicsInitRequest> | undefined, b: PhysicsInitRequest | PlainMessage<PhysicsInitRequest> | undefined): boolean;
}

/**
 * @generated from message game.rpc.PhysicsInitResponse
 */
export declare class PhysicsInitResponse extends Message<PhysicsInitResponse> {
  /**
   * @generated from field: string sender_id = 1;
   */
  senderId: string;

  /**
   * @generated from field: string room_id = 2;
   */
  roomId: string;

  /**
   * @generated from field: game.resources.GameState state = 3;
   */
  state: GameState;

  /**
   * @generated from field: repeated game.resources.Object objects = 4;
   */
  objects: Object$[];

  /**
   * @generated from field: repeated game.resources.Hand hands = 5;
   */
  hands: Hand[];

  constructor(data?: PartialMessage<PhysicsInitResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "game.rpc.PhysicsInitResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PhysicsInitResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PhysicsInitResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PhysicsInitResponse;

  static equals(a: PhysicsInitResponse | PlainMessage<PhysicsInitResponse> | undefined, b: PhysicsInitResponse | PlainMessage<PhysicsInitResponse> | undefined): boolean;
}

/**
 * @generated from message game.rpc.PhysicsRequest
 */
export declare class PhysicsRequest extends Message<PhysicsRequest> {
  /**
   * @generated from field: string sender_id = 1;
   */
  senderId: string;

  /**
   * @generated from field: string room_id = 2;
   */
  roomId: string;

  /**
   * @generated from field: game.resources.Hand hands = 3;
   */
  hands?: Hand;

  constructor(data?: PartialMessage<PhysicsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "game.rpc.PhysicsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PhysicsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PhysicsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PhysicsRequest;

  static equals(a: PhysicsRequest | PlainMessage<PhysicsRequest> | undefined, b: PhysicsRequest | PlainMessage<PhysicsRequest> | undefined): boolean;
}

/**
 * @generated from message game.rpc.PhysicsResponse
 */
export declare class PhysicsResponse extends Message<PhysicsResponse> {
  /**
   * @generated from field: string sender_id = 1;
   */
  senderId: string;

  /**
   * @generated from field: string room_id = 2;
   */
  roomId: string;

  /**
   * @generated from field: repeated game.resources.Object objects = 3;
   */
  objects: Object$[];

  constructor(data?: PartialMessage<PhysicsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "game.rpc.PhysicsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PhysicsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PhysicsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PhysicsResponse;

  static equals(a: PhysicsResponse | PlainMessage<PhysicsResponse> | undefined, b: PhysicsResponse | PlainMessage<PhysicsResponse> | undefined): boolean;
}

