name: Release Go Package

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  buf-generate:
    name: Buf Generate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Buf
        run: |
          curl -sSL "https://github.com/bufbuild/buf/releases/download/v1.34.0/buf-$(uname -s)-$(uname -m)" -o buf
          chmod +x buf
          sudo mv buf /usr/local/bin/buf

      - name: Run buf generate
        run: |
          buf generate

      - name: Upload generated gen directory
        uses: actions/upload-artifact@v3
        with:
          name: generated-files
          path: gen/

  test:
    name: Test
    needs: buf-generate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download generated gen directory
        uses: actions/download-artifact@v3
        with:
          name: generated-files
          path: gen

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Test Go package
        run: |
          cd gen
          go test ./...

  release:
    name: Create Release
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download generated gen directory
        uses: actions/download-artifact@v3
        with:
          name: generated-files
          path: gen
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22" # Ensure Go version is consistent

      - name: Build Go package
        run: |
          cp LICENSE gen/
          cd gen
          go mod init github.com/K-Kizuku/kotatuneko-backend/gen
          go mod tidy
          go build ./...

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: "New release of the Go package."
