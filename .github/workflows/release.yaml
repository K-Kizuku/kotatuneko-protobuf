name: Buf Generate and Release

on:
  push:
    branches:
      - main

jobs:
  buf-generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22"

      - name: Install buf
        run: |
          wget "https://github.com/bufbuild/buf/releases/download/v1.34.0/buf-$(uname -s)-$(uname -m)"
          chmod +x buf-Linux-x86_64
          sudo mv buf-Linux-x86_64 /usr/local/bin/buf

      - name: Generate code
        run: |
          buf generate

      - name: Commit generated code
        id: commit_generated_code
        run: |
          # Fetch all tags
          git fetch --tags

          # Get the latest tag
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)

          # Extract the current version parts
          IFS='.' read -r -a version_parts <<< "${latest_tag//v/}"
          major="${version_parts[0]}"
          minor="${version_parts[1]}"
          patch="${version_parts[2]}"

          # Increment the patch version
          patch=$((patch + 1))

          # Create new tag
          new_tag="v$major.$minor.$patch"

          # Set output for the next step
          echo "TAG_NAME=$new_tag" >> $GITHUB_OUTPUT

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "üè∑Ô∏è release $new_tag"
          git pull --rebase origin main 
          git push

      - name: Create Tag
        id: create_tag
        run: |
          git tag ${{ steps.commit_generated_code.outputs.TAG_NAME }}
          git push origin ${{ steps.commit_generated_code.outputs.TAG_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.commit_generated_code.outputs.TAG_NAME }}
          release_name: ${{ steps.commit_generated_code.outputs.TAG_NAME }}
          draft: false
          prerelease: false
